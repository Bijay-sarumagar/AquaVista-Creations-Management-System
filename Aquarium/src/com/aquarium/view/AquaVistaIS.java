//package com.aquarium.view;

package com.aquarium.view;


import com.aquarium.util.ValidationUtil;
import com.aquarium.model.AquariumModel;

//import com.collegeapp.util.ValidationUtil;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bijay Saru Magar
 */
public class AquaVistaIS extends javax.swing.JFrame {

    private List<AquariumModel> aquariumList;
    private java.awt.CardLayout cardLayout;
    private final ValidationUtil validationUtil;

    /**
     * Creates new form CollegeApp
     */
    public AquaVistaIS() {
        setResizable(false);
        initComponents();
        validationUtil = new ValidationUtil();
        initializeLayout(); // Set up CardLayout and add screens
        initializeData(); // Initialize student data and table
        startProgress(); // Show loading screen and initiate progress       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        pnlMainBar = new javax.swing.JPanel();
        lblMainBarSlogan = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        tabPaneMain = new javax.swing.JTabbedPane();
        pnlHomePageContents = new javax.swing.JPanel();
        lblHome = new javax.swing.JLabel();
        pnlAdminDashboard = new javax.swing.JPanel();
        spTblAquarium = new javax.swing.JScrollPane();
        tblAquarium = new javax.swing.JTable();
        lblTblStudentTitle = new javax.swing.JLabel();
        txtAquariumId = new javax.swing.JTextField();
        txtTemperature = new javax.swing.JTextField();
        txtFeeding = new javax.swing.JTextField();
        txtAquariumName = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();
        txtTankSize = new javax.swing.JTextField();
        cmbWaterType = new javax.swing.JComboBox<>();
        cmbMaintainance = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        pnlAboutUs = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlLoginScreen = new javax.swing.JPanel();
        pnlLoginLeft = new javax.swing.JPanel();
        lblLoginSlogan = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblLoginTitle = new javax.swing.JLabel();
        txtFldLoginUsername = new javax.swing.JTextField();
        pwdFldLogin = new javax.swing.JPasswordField();
        lblLoginSubTitle = new javax.swing.JLabel();
        lblLoginForgotPwd = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        lblLoginError = new javax.swing.JLabel();
        pnlLoadingScreen = new javax.swing.JPanel();
        lblLoadingLogo = new javax.swing.JLabel();
        pgBarSplashScreen = new javax.swing.JProgressBar(0,100);
        lblLoading = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();

        pnlMainScreen.setBackground(new java.awt.Color(0, 0, 0));
        pnlMainScreen.setMaximumSize(new java.awt.Dimension(1130, 690));
        pnlMainScreen.setMinimumSize(new java.awt.Dimension(1130, 690));
        pnlMainScreen.setPreferredSize(new java.awt.Dimension(1130, 690));

        pnlMainBar.setBackground(new java.awt.Color(99, 196, 209));
        pnlMainBar.setMaximumSize(new java.awt.Dimension(1130, 842));
        pnlMainBar.setMinimumSize(new java.awt.Dimension(1130, 842));
        pnlMainBar.setPreferredSize(new java.awt.Dimension(1130, 842));

        lblMainBarSlogan.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        lblMainBarSlogan.setText("Efficient and Organized Aquarium Management.");

        btnLogout.setBackground(new java.awt.Color(99, 196, 209));
        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        tabPaneMain.setBackground(new java.awt.Color(255, 255, 255));
        tabPaneMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tabPaneMain.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tabPaneMain.setMaximumSize(new java.awt.Dimension(1130, 842));
        tabPaneMain.setMinimumSize(new java.awt.Dimension(1130, 842));
        tabPaneMain.setPreferredSize(new java.awt.Dimension(1130, 842));

        pnlHomePageContents.setBackground(new java.awt.Color(255, 255, 255));
        pnlHomePageContents.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32)));

        lblHome.setText("<html>   <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; width: 1000px; height: 596px; overflow: hidden;\">    <!-- Header -->     <table style=\"width: 100%; background-color: #005f73; color: #fff; padding: 10px; text-align: center;\">       <tr>         <td>           <h1 style=\"font-size: 22px; margin: 5px;\">AquaVista Creations Management System</h1>           <p style=\"font-size: 14px;\">Experience the enchantment of the deep blue sea.</p>         </td>       </tr>     </table>      <!-- Welcome Section -->     <table style=\"width: 100%; margin: 20px 0; text-align: center;\">       <tr>         <td>           <h2 style=\"font-size: 18px; margin-bottom: 10px;\">Welcome to the AquaVista Creations Management System</h2>           <p style=\"font-size: 14px; margin-bottom: 15px;\">Efficiently track aquarium details, aquatic species, and maintenance schedules.</p>           <a href=\"#get-started\" style=\"padding: 10px 20px; background-color: #0a9396; color: #fff; text-decoration: none; font-size: 14px; border-radius: 5px;\">Get Started</a>         </td>       </tr>     </table>      <!-- Features Section -->     <table style=\"width: 100%; margin: 20px 0; text-align: center; background-color: #e0fbfc; padding: 10px;\">       <tr>         <td>           <h2 style=\"font-size: 18px; margin-bottom: 10px;\">Features</h2>         </td>       </tr>       <tr>         <td>           <ul style=\"list-style-type: none; padding: 0; margin: 0; font-size: 14px;\">             <li>✔ Track multiple tanks with unique parameters</li>             <li>✔ Automated feeding and maintenance schedules</li>             <li>✔ Detailed species and tank health information</li>             <li>✔ Monitor water quality and temperature ranges</li>             <li>✔ Comprehensive aquarium reports</li>           </ul>         </td>       </tr>     </table>   </body> </html> ");

        javax.swing.GroupLayout pnlHomePageContentsLayout = new javax.swing.GroupLayout(pnlHomePageContents);
        pnlHomePageContents.setLayout(pnlHomePageContentsLayout);
        pnlHomePageContentsLayout.setHorizontalGroup(
            pnlHomePageContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomePageContentsLayout.createSequentialGroup()
                .addComponent(lblHome, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 124, Short.MAX_VALUE))
        );
        pnlHomePageContentsLayout.setVerticalGroup(
            pnlHomePageContentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomePageContentsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHome)
                .addGap(118, 118, 118))
        );

        tabPaneMain.addTab("Home", pnlHomePageContents);

        pnlAdminDashboard.setBackground(new java.awt.Color(255, 255, 255));

        tblAquarium.setBackground(new java.awt.Color(99, 196, 209));
        tblAquarium.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Aquarium ID", "Aquarium Name", "Location", "Tank Size", "Water Type", "Maintainance", "Temperature", "Feeding"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAquarium.setGridColor(new java.awt.Color(0, 0, 0));
        tblAquarium.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblAquarium.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblAquarium.setShowGrid(true);
        tblAquarium.getTableHeader().setReorderingAllowed(false);
        tblAquarium.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAquariumMouseClicked(evt);
            }
        });
        spTblAquarium.setViewportView(tblAquarium);
        if (tblAquarium.getColumnModel().getColumnCount() > 0) {
            tblAquarium.getColumnModel().getColumn(0).setResizable(false);
            tblAquarium.getColumnModel().getColumn(1).setResizable(false);
            tblAquarium.getColumnModel().getColumn(2).setResizable(false);
            tblAquarium.getColumnModel().getColumn(3).setResizable(false);
            tblAquarium.getColumnModel().getColumn(4).setResizable(false);
            tblAquarium.getColumnModel().getColumn(4).setPreferredWidth(40);
            tblAquarium.getColumnModel().getColumn(5).setResizable(false);
            tblAquarium.getColumnModel().getColumn(6).setResizable(false);
            tblAquarium.getColumnModel().getColumn(7).setResizable(false);
        }

        lblTblStudentTitle.setBackground(new java.awt.Color(234, 192, 32));
        lblTblStudentTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTblStudentTitle.setText("Aquarium Inventory");
        lblTblStudentTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(99, 196, 209)));

        txtAquariumId.setBorder(javax.swing.BorderFactory.createTitledBorder("Aquarium ID"));

        txtTemperature.setBorder(javax.swing.BorderFactory.createTitledBorder("Temperature"));

        txtFeeding.setBorder(javax.swing.BorderFactory.createTitledBorder("Feeding"));

        txtAquariumName.setBorder(javax.swing.BorderFactory.createTitledBorder("Aquarium Name"));

        txtLocation.setBorder(javax.swing.BorderFactory.createTitledBorder("Location"));

        txtTankSize.setBorder(javax.swing.BorderFactory.createTitledBorder("Tank Size"));

        cmbWaterType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FreshWater", "CleanWater", "SaltyWater", "SoftWater", " " }));
        cmbWaterType.setBorder(javax.swing.BorderFactory.createTitledBorder("Water Type"));
        cmbWaterType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbWaterTypeActionPerformed(evt);
            }
        });

        cmbMaintainance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filter Change", "Water Change", "Algae Clean", "Heater Change", " " }));
        cmbMaintainance.setBorder(javax.swing.BorderFactory.createTitledBorder("Maintainance"));
        cmbMaintainance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMaintainanceActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAdminDashboardLayout = new javax.swing.GroupLayout(pnlAdminDashboard);
        pnlAdminDashboard.setLayout(pnlAdminDashboardLayout);
        pnlAdminDashboardLayout.setHorizontalGroup(
            pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addGap(188, 188, 188)
                .addComponent(btnClear)
                .addGap(118, 118, 118))
            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                        .addComponent(lblError)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                        .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAquariumId, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbWaterType, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAquariumName, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(cmbMaintainance, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(133, 133, 133)
                        .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTankSize, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFeeding, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79))))
            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTblStudentTitle)
                    .addComponent(spTblAquarium, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        pnlAdminDashboardLayout.setVerticalGroup(
            pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTblStudentTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTblAquarium, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAquariumId, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTankSize, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAquariumName, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMaintainance, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbWaterType, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFeeding, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(179, Short.MAX_VALUE))
        );

        tabPaneMain.addTab("Admin Dashboard", pnlAdminDashboard);

        pnlAboutUs.setBackground(new java.awt.Color(255, 255, 255));
        pnlAboutUs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32)));

        jLabel2.setText("<html>   <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; width: 1000px; height: 596px; overflow: hidden;\">     <!-- Header -->     <table style=\"width: 100%; background-color: #005f73; color: #fff; padding: 10px; text-align: center;\">       <tr>         <td>           <h1 style=\"font-size: 22px; margin: 5px;\">About Us</h1>           <p style=\"font-size: 14px;\">Learn more about our journey and mission</p>         </td>       </tr>     </table>      <!-- About Us Section -->     <table style=\"width: 100%; margin: 20px 0; text-align: center;\">       <tr>         <td>           <h2 style=\"font-size: 18px; margin-bottom: 10px;\">Who We Are</h2>           <p style=\"font-size: 14px; margin: 10px 20px;\">             We believe every aquarium deserves the best care to flourish, and we're here to make it possible.         </p>         </td>       </tr>     </table>      <!-- Mission Section -->     <table style=\"width: 100%; margin: 20px 0; text-align: center; background-color: #e0fbfc; padding: 10px;\">       <tr>         <td>           <h2 style=\"font-size: 18px; margin-bottom: 10px;\">Our Mission</h2>           <p style=\"font-size: 14px; margin: 10px 20px;\">             Our goal is to bridge the gap between technology and nature by offering seamless solutions for monitoring.           </p>         </td>       </tr>     </table>   </body> </html> ");
        jLabel2.setMaximumSize(new java.awt.Dimension(1024, 774));
        jLabel2.setMinimumSize(new java.awt.Dimension(1024, 774));
        jLabel2.setPreferredSize(new java.awt.Dimension(1024, 774));

        javax.swing.GroupLayout pnlAboutUsLayout = new javax.swing.GroupLayout(pnlAboutUs);
        pnlAboutUs.setLayout(pnlAboutUsLayout);
        pnlAboutUsLayout.setHorizontalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAboutUsLayout.setVerticalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabPaneMain.addTab("About Us", pnlAboutUs);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aquarium/resources/logooo_optimized.png"))); // NOI18N

        javax.swing.GroupLayout pnlMainBarLayout = new javax.swing.GroupLayout(pnlMainBar);
        pnlMainBar.setLayout(pnlMainBarLayout);
        pnlMainBarLayout.setHorizontalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMainBarSlogan, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addComponent(tabPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMainBarLayout.setVerticalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMainBarSlogan, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainBarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(11, 11, 11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tabPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlMainBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                .addComponent(pnlMainBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlLoginScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoginScreen.setMaximumSize(new java.awt.Dimension(1130, 690));
        pnlLoginScreen.setMinimumSize(new java.awt.Dimension(1130, 690));
        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(1130, 690));

        pnlLoginLeft.setBackground(new java.awt.Color(99, 196, 209));
        pnlLoginLeft.setMaximumSize(new java.awt.Dimension(570, 514));
        pnlLoginLeft.setMinimumSize(new java.awt.Dimension(570, 514));
        pnlLoginLeft.setPreferredSize(new java.awt.Dimension(570, 514));

        lblLoginSlogan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblLoginSlogan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginSlogan.setText("Efficient and Organized Aquarium Management.");

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aquarium/resources/logooo.png"))); // NOI18N

        lblName.setFont(new java.awt.Font("Showcard Gothic", 1, 24)); // NOI18N
        lblName.setText("AquaVista creations");

        javax.swing.GroupLayout pnlLoginLeftLayout = new javax.swing.GroupLayout(pnlLoginLeft);
        pnlLoginLeft.setLayout(pnlLoginLeftLayout);
        pnlLoginLeftLayout.setHorizontalGroup(
            pnlLoginLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLeftLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblLoginSlogan, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLeftLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlLoginLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLeftLayout.createSequentialGroup()
                        .addComponent(lblLogo)
                        .addGap(199, 199, 199))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLeftLayout.createSequentialGroup()
                        .addComponent(lblName)
                        .addGap(187, 187, 187))))
        );
        pnlLoginLeftLayout.setVerticalGroup(
            pnlLoginLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLeftLayout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addComponent(lblLogo)
                .addGap(18, 18, 18)
                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLoginSlogan)
                .addGap(214, 214, 214))
        );

        lblLoginTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblLoginTitle.setForeground(new java.awt.Color(99, 196, 209));
        lblLoginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginTitle.setText("Sign in to AquaVista Creations");

        txtFldLoginUsername.setBackground(new java.awt.Color(99, 196, 209));
        txtFldLoginUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFldLoginUsername.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        txtFldLoginUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldLoginUsernameActionPerformed(evt);
            }
        });

        pwdFldLogin.setBackground(new java.awt.Color(99, 196, 209));
        pwdFldLogin.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pwdFldLogin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        lblLoginSubTitle.setBackground(new java.awt.Color(234, 192, 32));
        lblLoginSubTitle.setForeground(new java.awt.Color(99, 196, 209));
        lblLoginSubTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginSubTitle.setText("Please enter your login details below using this app.");

        lblLoginForgotPwd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginForgotPwd.setForeground(new java.awt.Color(99, 196, 209));
        lblLoginForgotPwd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginForgotPwd.setText("Forgot your password?");

        btnLogin.setBackground(new java.awt.Color(99, 196, 209));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLogin.setText("LogIn");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblLoginError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginError.setForeground(new java.awt.Color(255, 0, 0));
        lblLoginError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlLoginScreenLayout = new javax.swing.GroupLayout(pnlLoginScreen);
        pnlLoginScreen.setLayout(pnlLoginScreenLayout);
        pnlLoginScreenLayout.setHorizontalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                .addComponent(pnlLoginLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreenLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFldLoginUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                            .addComponent(pwdFldLogin))
                        .addGap(97, 97, 97))
                    .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                        .addComponent(lblLoginError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginScreenLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97))
                    .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLoginSubTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                            .addComponent(lblLoginForgotPwd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLoginTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        pnlLoginScreenLayout.setVerticalGroup(
            pnlLoginScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginScreenLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(lblLoginError)
                .addGap(132, 132, 132)
                .addComponent(lblLoginTitle)
                .addGap(18, 18, 18)
                .addComponent(lblLoginSubTitle)
                .addGap(18, 18, 18)
                .addComponent(txtFldLoginUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pwdFldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblLoginForgotPwd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnlLoginLeft, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1130, 690));
        setSize(new java.awt.Dimension(1130, 514));

        pnlLoadingScreen.setBackground(new java.awt.Color(99, 196, 209));

        lblLoadingLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoadingLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aquarium/resources/logooo.png"))); // NOI18N

        pgBarSplashScreen.setStringPainted(true);
        pgBarSplashScreen.setForeground(new java.awt.Color(0, 0, 0));

        lblLoading.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoading.setText("Loading...");

        lblname.setFont(new java.awt.Font("Showcard Gothic", 1, 24)); // NOI18N
        lblname.setText("aquavista creations");

        javax.swing.GroupLayout pnlLoadingScreenLayout = new javax.swing.GroupLayout(pnlLoadingScreen);
        pnlLoadingScreen.setLayout(pnlLoadingScreenLayout);
        pnlLoadingScreenLayout.setHorizontalGroup(
            pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLoading)
                            .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                        .addGap(417, 417, 417)
                        .addGroup(pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(lblname))
                            .addComponent(lblLoadingLogo))))
                .addContainerGap(375, Short.MAX_VALUE))
        );
        pnlLoadingScreenLayout.setVerticalGroup(
            pnlLoadingScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoadingScreenLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(lblLoadingLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblname, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pgBarSplashScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLoading)
                .addGap(141, 141, 141))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Initializes the layout of the application by setting up the CardLayout
     * and adding panels for different screens. Each panel is uniquely
     * identified for easy navigation between screens.
     */
    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }

    /**
     * Initializes the application's data, including the student list and table.
     * Populates the student list with sample data for demonstration purposes.
     */
    private void initializeData() {
        aquariumList = new LinkedList<>();

        // Create a table model with column names
        DefaultTableModel model = new DefaultTableModel(
            new Object[][]{}, // No initial data
            new String[]{ // Column names
                "Aquarium ID", "Aquarium Name", "Location", "Tank Size", "Water Type", 
                "Maintenance", "Temperature", "Feeding"
            }
        );
        tblAquarium.setModel(model);

        // Example data for the table
        registerAquarium(new AquariumModel(10001, "Coral Reef", "Pacific Ocean", 500, "Saltwater", "Weekly", 25, "Fish Flakes"));
        registerAquarium(new AquariumModel(10002, "Freshwater Tank", "Amazon River", 300, "Freshwater", "Bi-weekly", 24, "Worms"));
    }

    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashScreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }

    // Method to add aquarium data and populate the table
    private void registerAquarium(AquariumModel aquariumModel) {
        aquariumList.add(aquariumModel);
        DefaultTableModel model = (DefaultTableModel) tblAquarium.getModel();
        model.addRow(new Object[]{
            aquariumModel.getAquariumId(), aquariumModel.getAquariumName(), aquariumModel.getLocation(),
            aquariumModel.getTankSize(), aquariumModel.getWaterType(), aquariumModel.getMaintenance(),
            aquariumModel.getTemperature(), aquariumModel.getFeeding()
        });
    }

    /**
     * Switches the application screen to the specified screen name.
     *
     * @param screenName The name of the screen to display.
     */
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }

    /**
     * Handles the login button action. Validates the username and password
     * input and navigates to the main screen if credentials are correct.
     * Displays appropriate error messages otherwise.
     *
     * @param evt The action event triggered by the login button.
     */
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // Get the username and password input
        String username = txtFldLoginUsername.getText();
        String password = new String(pwdFldLogin.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            lblLoginError.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("admin") || !password.equals("admin")) {
            lblLoginError.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            lblLoginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * Handles the logout button action. Clears the login fields and switches
     * back to the login screen.
     *
     * @param evt The action event triggered by the logout button.
     */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        pwdFldLogin.setText("");
        txtFldLoginUsername.setText("");
        loadScreen("LoginScreen"); // Load the main screen
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // Get the input data from the UI fields
        String aquariumId = txtAquariumId.getText();
        String aquariumName = txtAquariumName.getText();
        String location = txtLocation.getText();
        String tankSize = txtTankSize.getText();
        String waterType = cmbWaterType.getSelectedItem().toString();
        String maintenance = cmbMaintainance.getSelectedItem().toString();
        String temperature = txtTemperature.getText();
        String feeding = txtFeeding.getText();

        // Validate the inputs using the ValidationUtil methods
        if (ValidationUtil.isValidAquariumId(aquariumId, lblError) &&
            ValidationUtil.isValidAquariumName(aquariumName, lblError) &&
            ValidationUtil.isValidLocation(location, lblError) &&
            ValidationUtil.isValidTankSize(tankSize, lblError) &&
            ValidationUtil.isValidWaterType(waterType, lblError) &&
            ValidationUtil.isValidMaintenance(maintenance, lblError) &&
            ValidationUtil.isValidTemperature(temperature, lblError) &&
            ValidationUtil.isValidFeeding(feeding, lblError)) {

            // Create a new AquariumModel instance
            int aquariumIdValue = Integer.parseInt(aquariumId);
            int tankSizeValue = Integer.parseInt(tankSize);
            int temperatureValue = Integer.parseInt(temperature);
            AquariumModel aquariumModel = new AquariumModel(
                aquariumIdValue, aquariumName, location, tankSizeValue, waterType, maintenance, temperatureValue, feeding
            );

            // Register the aquarium
            registerAquarium(aquariumModel);

            // Show a success message
            JOptionPane.showMessageDialog(this, "Aquarium added successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

        } else {
            JOptionPane.showMessageDialog(this, "Please enter valid data.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblAquarium.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) tblAquarium.getModel();
            model.removeRow(selectedRow);
            aquariumList.remove(selectedRow);
            JOptionPane.showMessageDialog(this, "Aquarium removed successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Please select an aquarium to remove.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = tblAquarium.getSelectedRow();
        if (selectedRow != -1) {
            // Get updated values from text fields
            String aquariumId = txtAquariumId.getText();
            String aquariumName = txtAquariumName.getText();
            String location = txtLocation.getText();
            String tankSize = txtTankSize.getText();
            String waterType = cmbWaterType.getSelectedItem().toString();
            String maintenance = cmbMaintainance.getSelectedItem().toString();
            String temperature = txtTemperature.getText();
            String feeding = txtFeeding.getText();

            // Validate inputs
            if (ValidationUtil.isValidAquariumId(aquariumId, lblError) &&
                ValidationUtil.isValidAquariumName(aquariumName, lblError) &&
                ValidationUtil.isValidLocation(location, lblError) &&
                ValidationUtil.isValidTankSize(tankSize, lblError) &&
                ValidationUtil.isValidWaterType(waterType, lblError) &&
                ValidationUtil.isValidMaintenance(maintenance, lblError) &&
                ValidationUtil.isValidTemperature(temperature, lblError) &&
                ValidationUtil.isValidFeeding(feeding, lblError)) {

                // Update the table
                tblAquarium.setValueAt(aquariumId, selectedRow, 0);
                tblAquarium.setValueAt(aquariumName, selectedRow, 1);
                tblAquarium.setValueAt(location, selectedRow, 2);
                tblAquarium.setValueAt(tankSize, selectedRow, 3);
                tblAquarium.setValueAt(waterType, selectedRow, 4);
                tblAquarium.setValueAt(maintenance, selectedRow, 5);
                tblAquarium.setValueAt(temperature, selectedRow, 6);
                tblAquarium.setValueAt(feeding, selectedRow, 7);

                // Update the aquarium list
                AquariumModel updatedAquarium = new AquariumModel(
                    Integer.parseInt(aquariumId), aquariumName, location, Integer.parseInt(tankSize),
                    waterType, maintenance, Integer.parseInt(temperature), feeding
                );
                aquariumList.set(selectedRow, updatedAquarium);

                JOptionPane.showMessageDialog(this, "Aquarium updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Invalid data! Please check inputs.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No row selected to update!", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblAquariumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAquariumMouseClicked
        int selectedRow = tblAquarium.getSelectedRow();
if (selectedRow != -1) {
    // Setting text fields
    txtAquariumId.setText(tblAquarium.getValueAt(selectedRow, 0).toString());
    txtAquariumName.setText(tblAquarium.getValueAt(selectedRow, 1).toString());
    txtLocation.setText(tblAquarium.getValueAt(selectedRow, 2).toString());
    txtTankSize.setText(tblAquarium.getValueAt(selectedRow, 3).toString());
    cmbWaterType.setSelectedItem(tblAquarium.getValueAt(selectedRow, 4).toString());
    cmbMaintainance.setSelectedItem(tblAquarium.getValueAt(selectedRow, 5).toString());
    txtTemperature.setText(tblAquarium.getValueAt(selectedRow, 6).toString());
    txtFeeding.setText(tblAquarium.getValueAt(selectedRow, 7).toString());
}

    }//GEN-LAST:event_tblAquariumMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtAquariumId.setText("");
        txtAquariumName.setText("");
        txtLocation.setText("");
        txtTankSize.setText("");
        cmbWaterType.setSelectedItem(0);  // Reset the selection
        cmbMaintainance.setSelectedItem(0);  // Reset the selection
        txtTemperature.setText("");
        txtFeeding.setText("");

    }//GEN-LAST:event_btnClearActionPerformed

    private void txtFldLoginUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldLoginUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldLoginUsernameActionPerformed

    private void cmbWaterTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbWaterTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbWaterTypeActionPerformed

    private void cmbMaintainanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMaintainanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMaintainanceActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AquaVistaIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AquaVistaIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AquaVistaIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AquaVistaIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        AquaVistaIS app = new AquaVistaIS();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            app.setVisible(true);
        });

        app.startProgress();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbMaintainance;
    private javax.swing.JComboBox<String> cmbWaterType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoadingLogo;
    private javax.swing.JLabel lblLoginError;
    private javax.swing.JLabel lblLoginForgotPwd;
    private javax.swing.JLabel lblLoginSlogan;
    private javax.swing.JLabel lblLoginSubTitle;
    private javax.swing.JLabel lblLoginTitle;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblMainBarSlogan;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTblStudentTitle;
    private javax.swing.JLabel lblname;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlAdminDashboard;
    private javax.swing.JPanel pnlHomePageContents;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLoginLeft;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlMainBar;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPasswordField pwdFldLogin;
    private javax.swing.JScrollPane spTblAquarium;
    private javax.swing.JTabbedPane tabPaneMain;
    private javax.swing.JTable tblAquarium;
    private javax.swing.JTextField txtAquariumId;
    private javax.swing.JTextField txtAquariumName;
    private javax.swing.JTextField txtFeeding;
    private javax.swing.JTextField txtFldLoginUsername;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtTankSize;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}

